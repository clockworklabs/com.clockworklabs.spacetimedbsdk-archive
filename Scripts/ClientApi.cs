// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: client_api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ClientApi {

  /// <summary>Holder for reflection information generated from client_api.proto</summary>
  public static partial class ClientApiReflection {

    #region Descriptor
    /// <summary>File descriptor for client_api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClientApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBjbGllbnRfYXBpLnByb3RvEgpjbGllbnRfYXBpIpUCCgdNZXNzYWdlEjAK",
            "DGZ1bmN0aW9uQ2FsbBgBIAEoCzIYLmNsaWVudF9hcGkuRnVuY3Rpb25DYWxs",
            "SAASPAoSc3Vic2NyaXB0aW9uVXBkYXRlGAIgASgLMh4uY2xpZW50X2FwaS5T",
            "dWJzY3JpcHRpb25VcGRhdGVIABIiCgVldmVudBgDIAEoCzIRLmNsaWVudF9h",
            "cGkuRXZlbnRIABI6ChF0cmFuc2FjdGlvblVwZGF0ZRgEIAEoCzIdLmNsaWVu",
            "dF9hcGkuVHJhbnNhY3Rpb25VcGRhdGVIABIyCg1pZGVudGl0eVRva2VuGAUg",
            "ASgLMhkuY2xpZW50X2FwaS5JZGVudGl0eVRva2VuSABCBgoEdHlwZSIwCg1J",
            "ZGVudGl0eVRva2VuEhAKCGlkZW50aXR5GAEgASgMEg0KBXRva2VuGAIgASgJ",
            "IjEKDEZ1bmN0aW9uQ2FsbBIPCgdyZWR1Y2VyGAEgASgJEhAKCGFyZ0J5dGVz",
            "GAIgASgMIpkCCgVFdmVudBIRCgl0aW1lc3RhbXAYASABKAQSFgoOY2FsbGVy",
            "SWRlbnRpdHkYAiABKAwSLgoMZnVuY3Rpb25DYWxsGAMgASgLMhguY2xpZW50",
            "X2FwaS5GdW5jdGlvbkNhbGwSKAoGc3RhdHVzGAQgASgOMhguY2xpZW50X2Fw",
            "aS5FdmVudC5TdGF0dXMSDwoHbWVzc2FnZRgFIAEoCRIaChJlbmVyZ3lfcXVh",
            "bnRhX3VzZWQYBiABKAMSJgoeaG9zdF9leGVjdXRpb25fZHVyYXRpb25fbWlj",
            "cm9zGAcgASgEIjYKBlN0YXR1cxINCgljb21taXR0ZWQQABIKCgZmYWlsZWQQ",
            "ARIRCg1vdXRfb2ZfZW5lcmd5EAIiQwoSU3Vic2NyaXB0aW9uVXBkYXRlEi0K",
            "DHRhYmxlVXBkYXRlcxgBIAMoCzIXLmNsaWVudF9hcGkuVGFibGVVcGRhdGUi",
            "bAoLVGFibGVVcGRhdGUSDwoHdGFibGVJZBgBIAEoDRIRCgl0YWJsZU5hbWUY",
            "AiABKAkSOQoSdGFibGVSb3dPcGVyYXRpb25zGAMgAygLMh0uY2xpZW50X2Fw",
            "aS5UYWJsZVJvd09wZXJhdGlvbiKSAQoRVGFibGVSb3dPcGVyYXRpb24SNwoC",
            "b3AYASABKA4yKy5jbGllbnRfYXBpLlRhYmxlUm93T3BlcmF0aW9uLk9wZXJh",
            "dGlvblR5cGUSDgoGcm93X3BrGAIgASgMEgsKA3JvdxgDIAEoDCInCg1PcGVy",
            "YXRpb25UeXBlEgoKBkRFTEVURRAAEgoKBklOU0VSVBABInEKEVRyYW5zYWN0",
            "aW9uVXBkYXRlEiAKBWV2ZW50GAEgASgLMhEuY2xpZW50X2FwaS5FdmVudBI6",
            "ChJzdWJzY3JpcHRpb25VcGRhdGUYAiABKAsyHi5jbGllbnRfYXBpLlN1YnNj",
            "cmlwdGlvblVwZGF0ZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.Message), global::ClientApi.Message.Parser, new[]{ "FunctionCall", "SubscriptionUpdate", "Event", "TransactionUpdate", "IdentityToken" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.IdentityToken), global::ClientApi.IdentityToken.Parser, new[]{ "Identity", "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.FunctionCall), global::ClientApi.FunctionCall.Parser, new[]{ "Reducer", "ArgBytes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.Event), global::ClientApi.Event.Parser, new[]{ "Timestamp", "CallerIdentity", "FunctionCall", "Status", "Message", "EnergyQuantaUsed", "HostExecutionDurationMicros" }, null, new[]{ typeof(global::ClientApi.Event.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.SubscriptionUpdate), global::ClientApi.SubscriptionUpdate.Parser, new[]{ "TableUpdates" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.TableUpdate), global::ClientApi.TableUpdate.Parser, new[]{ "TableId", "TableName", "TableRowOperations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.TableRowOperation), global::ClientApi.TableRowOperation.Parser, new[]{ "Op", "RowPk", "Row" }, null, new[]{ typeof(global::ClientApi.TableRowOperation.Types.OperationType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ClientApi.TransactionUpdate), global::ClientApi.TransactionUpdate.Parser, new[]{ "Event", "SubscriptionUpdate" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /////// Generic Message //////
  /// TODO: Theoretically this format could be replaced by TypeValue/TypeDef
  /// but I don't think we want to do that yet.
  /// TODO: Split this up into ServerBound and ClientBound if there's no overlap
  /// </summary>
  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.FunctionCall:
          FunctionCall = other.FunctionCall.Clone();
          break;
        case TypeOneofCase.SubscriptionUpdate:
          SubscriptionUpdate = other.SubscriptionUpdate.Clone();
          break;
        case TypeOneofCase.Event:
          Event = other.Event.Clone();
          break;
        case TypeOneofCase.TransactionUpdate:
          TransactionUpdate = other.TransactionUpdate.Clone();
          break;
        case TypeOneofCase.IdentityToken:
          IdentityToken = other.IdentityToken.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "functionCall" field.</summary>
    public const int FunctionCallFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.FunctionCall FunctionCall {
      get { return typeCase_ == TypeOneofCase.FunctionCall ? (global::ClientApi.FunctionCall) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.FunctionCall;
      }
    }

    /// <summary>Field number for the "subscriptionUpdate" field.</summary>
    public const int SubscriptionUpdateFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.SubscriptionUpdate SubscriptionUpdate {
      get { return typeCase_ == TypeOneofCase.SubscriptionUpdate ? (global::ClientApi.SubscriptionUpdate) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.SubscriptionUpdate;
      }
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.Event Event {
      get { return typeCase_ == TypeOneofCase.Event ? (global::ClientApi.Event) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Event;
      }
    }

    /// <summary>Field number for the "transactionUpdate" field.</summary>
    public const int TransactionUpdateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.TransactionUpdate TransactionUpdate {
      get { return typeCase_ == TypeOneofCase.TransactionUpdate ? (global::ClientApi.TransactionUpdate) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TransactionUpdate;
      }
    }

    /// <summary>Field number for the "identityToken" field.</summary>
    public const int IdentityTokenFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.IdentityToken IdentityToken {
      get { return typeCase_ == TypeOneofCase.IdentityToken ? (global::ClientApi.IdentityToken) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.IdentityToken;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      FunctionCall = 1,
      SubscriptionUpdate = 2,
      Event = 3,
      TransactionUpdate = 4,
      IdentityToken = 5,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FunctionCall, other.FunctionCall)) return false;
      if (!object.Equals(SubscriptionUpdate, other.SubscriptionUpdate)) return false;
      if (!object.Equals(Event, other.Event)) return false;
      if (!object.Equals(TransactionUpdate, other.TransactionUpdate)) return false;
      if (!object.Equals(IdentityToken, other.IdentityToken)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.FunctionCall) hash ^= FunctionCall.GetHashCode();
      if (typeCase_ == TypeOneofCase.SubscriptionUpdate) hash ^= SubscriptionUpdate.GetHashCode();
      if (typeCase_ == TypeOneofCase.Event) hash ^= Event.GetHashCode();
      if (typeCase_ == TypeOneofCase.TransactionUpdate) hash ^= TransactionUpdate.GetHashCode();
      if (typeCase_ == TypeOneofCase.IdentityToken) hash ^= IdentityToken.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeCase_ == TypeOneofCase.FunctionCall) {
        output.WriteRawTag(10);
        output.WriteMessage(FunctionCall);
      }
      if (typeCase_ == TypeOneofCase.SubscriptionUpdate) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscriptionUpdate);
      }
      if (typeCase_ == TypeOneofCase.Event) {
        output.WriteRawTag(26);
        output.WriteMessage(Event);
      }
      if (typeCase_ == TypeOneofCase.TransactionUpdate) {
        output.WriteRawTag(34);
        output.WriteMessage(TransactionUpdate);
      }
      if (typeCase_ == TypeOneofCase.IdentityToken) {
        output.WriteRawTag(42);
        output.WriteMessage(IdentityToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.FunctionCall) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FunctionCall);
      }
      if (typeCase_ == TypeOneofCase.SubscriptionUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionUpdate);
      }
      if (typeCase_ == TypeOneofCase.Event) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (typeCase_ == TypeOneofCase.TransactionUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionUpdate);
      }
      if (typeCase_ == TypeOneofCase.IdentityToken) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentityToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.FunctionCall:
          if (FunctionCall == null) {
            FunctionCall = new global::ClientApi.FunctionCall();
          }
          FunctionCall.MergeFrom(other.FunctionCall);
          break;
        case TypeOneofCase.SubscriptionUpdate:
          if (SubscriptionUpdate == null) {
            SubscriptionUpdate = new global::ClientApi.SubscriptionUpdate();
          }
          SubscriptionUpdate.MergeFrom(other.SubscriptionUpdate);
          break;
        case TypeOneofCase.Event:
          if (Event == null) {
            Event = new global::ClientApi.Event();
          }
          Event.MergeFrom(other.Event);
          break;
        case TypeOneofCase.TransactionUpdate:
          if (TransactionUpdate == null) {
            TransactionUpdate = new global::ClientApi.TransactionUpdate();
          }
          TransactionUpdate.MergeFrom(other.TransactionUpdate);
          break;
        case TypeOneofCase.IdentityToken:
          if (IdentityToken == null) {
            IdentityToken = new global::ClientApi.IdentityToken();
          }
          IdentityToken.MergeFrom(other.IdentityToken);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::ClientApi.FunctionCall subBuilder = new global::ClientApi.FunctionCall();
            if (typeCase_ == TypeOneofCase.FunctionCall) {
              subBuilder.MergeFrom(FunctionCall);
            }
            input.ReadMessage(subBuilder);
            FunctionCall = subBuilder;
            break;
          }
          case 18: {
            global::ClientApi.SubscriptionUpdate subBuilder = new global::ClientApi.SubscriptionUpdate();
            if (typeCase_ == TypeOneofCase.SubscriptionUpdate) {
              subBuilder.MergeFrom(SubscriptionUpdate);
            }
            input.ReadMessage(subBuilder);
            SubscriptionUpdate = subBuilder;
            break;
          }
          case 26: {
            global::ClientApi.Event subBuilder = new global::ClientApi.Event();
            if (typeCase_ == TypeOneofCase.Event) {
              subBuilder.MergeFrom(Event);
            }
            input.ReadMessage(subBuilder);
            Event = subBuilder;
            break;
          }
          case 34: {
            global::ClientApi.TransactionUpdate subBuilder = new global::ClientApi.TransactionUpdate();
            if (typeCase_ == TypeOneofCase.TransactionUpdate) {
              subBuilder.MergeFrom(TransactionUpdate);
            }
            input.ReadMessage(subBuilder);
            TransactionUpdate = subBuilder;
            break;
          }
          case 42: {
            global::ClientApi.IdentityToken subBuilder = new global::ClientApi.IdentityToken();
            if (typeCase_ == TypeOneofCase.IdentityToken) {
              subBuilder.MergeFrom(IdentityToken);
            }
            input.ReadMessage(subBuilder);
            IdentityToken = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class IdentityToken : pb::IMessage<IdentityToken> {
    private static readonly pb::MessageParser<IdentityToken> _parser = new pb::MessageParser<IdentityToken>(() => new IdentityToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IdentityToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityToken(IdentityToken other) : this() {
      identity_ = other.identity_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentityToken Clone() {
      return new IdentityToken(this);
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 1;
    private pb::ByteString identity_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Identity {
      get { return identity_; }
      set {
        identity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IdentityToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IdentityToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Identity != other.Identity) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Identity.Length != 0) hash ^= Identity.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Identity.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Identity);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Identity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Identity);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IdentityToken other) {
      if (other == null) {
        return;
      }
      if (other.Identity.Length != 0) {
        Identity = other.Identity;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Identity = input.ReadBytes();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// TODO: Evaluate if it makes sense for this to also include the
  /// identity and name of the module this is calling
  /// </summary>
  public sealed partial class FunctionCall : pb::IMessage<FunctionCall> {
    private static readonly pb::MessageParser<FunctionCall> _parser = new pb::MessageParser<FunctionCall>(() => new FunctionCall());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FunctionCall> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionCall() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionCall(FunctionCall other) : this() {
      reducer_ = other.reducer_;
      argBytes_ = other.argBytes_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FunctionCall Clone() {
      return new FunctionCall(this);
    }

    /// <summary>Field number for the "reducer" field.</summary>
    public const int ReducerFieldNumber = 1;
    private string reducer_ = "";
    /// <summary>
    /// TODO: Maybe this should be replaced with an int identifier for performance?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reducer {
      get { return reducer_; }
      set {
        reducer_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "argBytes" field.</summary>
    public const int ArgBytesFieldNumber = 2;
    private pb::ByteString argBytes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ArgBytes {
      get { return argBytes_; }
      set {
        argBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FunctionCall);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FunctionCall other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reducer != other.Reducer) return false;
      if (ArgBytes != other.ArgBytes) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reducer.Length != 0) hash ^= Reducer.GetHashCode();
      if (ArgBytes.Length != 0) hash ^= ArgBytes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reducer.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Reducer);
      }
      if (ArgBytes.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ArgBytes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reducer.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reducer);
      }
      if (ArgBytes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ArgBytes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FunctionCall other) {
      if (other == null) {
        return;
      }
      if (other.Reducer.Length != 0) {
        Reducer = other.Reducer;
      }
      if (other.ArgBytes.Length != 0) {
        ArgBytes = other.ArgBytes;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Reducer = input.ReadString();
            break;
          }
          case 18: {
            ArgBytes = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      timestamp_ = other.timestamp_;
      callerIdentity_ = other.callerIdentity_;
      functionCall_ = other.functionCall_ != null ? other.functionCall_.Clone() : null;
      status_ = other.status_;
      message_ = other.message_;
      energyQuantaUsed_ = other.energyQuantaUsed_;
      hostExecutionDurationMicros_ = other.hostExecutionDurationMicros_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "callerIdentity" field.</summary>
    public const int CallerIdentityFieldNumber = 2;
    private pb::ByteString callerIdentity_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CallerIdentity {
      get { return callerIdentity_; }
      set {
        callerIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "functionCall" field.</summary>
    public const int FunctionCallFieldNumber = 3;
    private global::ClientApi.FunctionCall functionCall_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.FunctionCall FunctionCall {
      get { return functionCall_; }
      set {
        functionCall_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::ClientApi.Event.Types.Status status_ = global::ClientApi.Event.Types.Status.Committed;
    /// <summary>
    /// TODO: arguably these should go inside an EventStatus message
    /// since success doesn't have a message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.Event.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 5;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "energy_quanta_used" field.</summary>
    public const int EnergyQuantaUsedFieldNumber = 6;
    private long energyQuantaUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EnergyQuantaUsed {
      get { return energyQuantaUsed_; }
      set {
        energyQuantaUsed_ = value;
      }
    }

    /// <summary>Field number for the "host_execution_duration_micros" field.</summary>
    public const int HostExecutionDurationMicrosFieldNumber = 7;
    private ulong hostExecutionDurationMicros_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong HostExecutionDurationMicros {
      get { return hostExecutionDurationMicros_; }
      set {
        hostExecutionDurationMicros_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Timestamp != other.Timestamp) return false;
      if (CallerIdentity != other.CallerIdentity) return false;
      if (!object.Equals(FunctionCall, other.FunctionCall)) return false;
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if (EnergyQuantaUsed != other.EnergyQuantaUsed) return false;
      if (HostExecutionDurationMicros != other.HostExecutionDurationMicros) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (CallerIdentity.Length != 0) hash ^= CallerIdentity.GetHashCode();
      if (functionCall_ != null) hash ^= FunctionCall.GetHashCode();
      if (Status != global::ClientApi.Event.Types.Status.Committed) hash ^= Status.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (EnergyQuantaUsed != 0L) hash ^= EnergyQuantaUsed.GetHashCode();
      if (HostExecutionDurationMicros != 0UL) hash ^= HostExecutionDurationMicros.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Timestamp != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Timestamp);
      }
      if (CallerIdentity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(CallerIdentity);
      }
      if (functionCall_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(FunctionCall);
      }
      if (Status != global::ClientApi.Event.Types.Status.Committed) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Message);
      }
      if (EnergyQuantaUsed != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EnergyQuantaUsed);
      }
      if (HostExecutionDurationMicros != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(HostExecutionDurationMicros);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (CallerIdentity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CallerIdentity);
      }
      if (functionCall_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FunctionCall);
      }
      if (Status != global::ClientApi.Event.Types.Status.Committed) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (EnergyQuantaUsed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnergyQuantaUsed);
      }
      if (HostExecutionDurationMicros != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HostExecutionDurationMicros);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.CallerIdentity.Length != 0) {
        CallerIdentity = other.CallerIdentity;
      }
      if (other.functionCall_ != null) {
        if (functionCall_ == null) {
          FunctionCall = new global::ClientApi.FunctionCall();
        }
        FunctionCall.MergeFrom(other.FunctionCall);
      }
      if (other.Status != global::ClientApi.Event.Types.Status.Committed) {
        Status = other.Status;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.EnergyQuantaUsed != 0L) {
        EnergyQuantaUsed = other.EnergyQuantaUsed;
      }
      if (other.HostExecutionDurationMicros != 0UL) {
        HostExecutionDurationMicros = other.HostExecutionDurationMicros;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 18: {
            CallerIdentity = input.ReadBytes();
            break;
          }
          case 26: {
            if (functionCall_ == null) {
              FunctionCall = new global::ClientApi.FunctionCall();
            }
            input.ReadMessage(FunctionCall);
            break;
          }
          case 32: {
            Status = (global::ClientApi.Event.Types.Status) input.ReadEnum();
            break;
          }
          case 42: {
            Message = input.ReadString();
            break;
          }
          case 48: {
            EnergyQuantaUsed = input.ReadInt64();
            break;
          }
          case 56: {
            HostExecutionDurationMicros = input.ReadUInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Event message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("committed")] Committed = 0,
        [pbr::OriginalName("failed")] Failed = 1,
        [pbr::OriginalName("out_of_energy")] OutOfEnergy = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// TODO: Maybe call this StateUpdate if it's implied to be a subscription update
  /// </summary>
  public sealed partial class SubscriptionUpdate : pb::IMessage<SubscriptionUpdate> {
    private static readonly pb::MessageParser<SubscriptionUpdate> _parser = new pb::MessageParser<SubscriptionUpdate>(() => new SubscriptionUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdate(SubscriptionUpdate other) : this() {
      tableUpdates_ = other.tableUpdates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionUpdate Clone() {
      return new SubscriptionUpdate(this);
    }

    /// <summary>Field number for the "tableUpdates" field.</summary>
    public const int TableUpdatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ClientApi.TableUpdate> _repeated_tableUpdates_codec
        = pb::FieldCodec.ForMessage(10, global::ClientApi.TableUpdate.Parser);
    private readonly pbc::RepeatedField<global::ClientApi.TableUpdate> tableUpdates_ = new pbc::RepeatedField<global::ClientApi.TableUpdate>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ClientApi.TableUpdate> TableUpdates {
      get { return tableUpdates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tableUpdates_.Equals(other.tableUpdates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tableUpdates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tableUpdates_.WriteTo(output, _repeated_tableUpdates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tableUpdates_.CalculateSize(_repeated_tableUpdates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionUpdate other) {
      if (other == null) {
        return;
      }
      tableUpdates_.Add(other.tableUpdates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tableUpdates_.AddEntriesFrom(input, _repeated_tableUpdates_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableUpdate : pb::IMessage<TableUpdate> {
    private static readonly pb::MessageParser<TableUpdate> _parser = new pb::MessageParser<TableUpdate>(() => new TableUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableUpdate(TableUpdate other) : this() {
      tableId_ = other.tableId_;
      tableName_ = other.tableName_;
      tableRowOperations_ = other.tableRowOperations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableUpdate Clone() {
      return new TableUpdate(this);
    }

    /// <summary>Field number for the "tableId" field.</summary>
    public const int TableIdFieldNumber = 1;
    private uint tableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint TableId {
      get { return tableId_; }
      set {
        tableId_ = value;
      }
    }

    /// <summary>Field number for the "tableName" field.</summary>
    public const int TableNameFieldNumber = 2;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tableRowOperations" field.</summary>
    public const int TableRowOperationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ClientApi.TableRowOperation> _repeated_tableRowOperations_codec
        = pb::FieldCodec.ForMessage(26, global::ClientApi.TableRowOperation.Parser);
    private readonly pbc::RepeatedField<global::ClientApi.TableRowOperation> tableRowOperations_ = new pbc::RepeatedField<global::ClientApi.TableRowOperation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ClientApi.TableRowOperation> TableRowOperations {
      get { return tableRowOperations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableId != other.TableId) return false;
      if (TableName != other.TableName) return false;
      if(!tableRowOperations_.Equals(other.tableRowOperations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableId != 0) hash ^= TableId.GetHashCode();
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      hash ^= tableRowOperations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(TableId);
      }
      if (TableName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TableName);
      }
      tableRowOperations_.WriteTo(output, _repeated_tableRowOperations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TableId);
      }
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      size += tableRowOperations_.CalculateSize(_repeated_tableRowOperations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableUpdate other) {
      if (other == null) {
        return;
      }
      if (other.TableId != 0) {
        TableId = other.TableId;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      tableRowOperations_.Add(other.tableRowOperations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TableId = input.ReadUInt32();
            break;
          }
          case 18: {
            TableName = input.ReadString();
            break;
          }
          case 26: {
            tableRowOperations_.AddEntriesFrom(input, _repeated_tableRowOperations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TableRowOperation : pb::IMessage<TableRowOperation> {
    private static readonly pb::MessageParser<TableRowOperation> _parser = new pb::MessageParser<TableRowOperation>(() => new TableRowOperation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TableRowOperation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableRowOperation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableRowOperation(TableRowOperation other) : this() {
      op_ = other.op_;
      rowPk_ = other.rowPk_;
      row_ = other.row_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TableRowOperation Clone() {
      return new TableRowOperation(this);
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 1;
    private global::ClientApi.TableRowOperation.Types.OperationType op_ = global::ClientApi.TableRowOperation.Types.OperationType.Delete;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.TableRowOperation.Types.OperationType Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    /// <summary>Field number for the "row_pk" field.</summary>
    public const int RowPkFieldNumber = 2;
    private pb::ByteString rowPk_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RowPk {
      get { return rowPk_; }
      set {
        rowPk_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "row" field.</summary>
    public const int RowFieldNumber = 3;
    private pb::ByteString row_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Row {
      get { return row_; }
      set {
        row_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TableRowOperation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TableRowOperation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Op != other.Op) return false;
      if (RowPk != other.RowPk) return false;
      if (Row != other.Row) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Op != global::ClientApi.TableRowOperation.Types.OperationType.Delete) hash ^= Op.GetHashCode();
      if (RowPk.Length != 0) hash ^= RowPk.GetHashCode();
      if (Row.Length != 0) hash ^= Row.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Op != global::ClientApi.TableRowOperation.Types.OperationType.Delete) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Op);
      }
      if (RowPk.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(RowPk);
      }
      if (Row.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Row);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Op != global::ClientApi.TableRowOperation.Types.OperationType.Delete) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (RowPk.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RowPk);
      }
      if (Row.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Row);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TableRowOperation other) {
      if (other == null) {
        return;
      }
      if (other.Op != global::ClientApi.TableRowOperation.Types.OperationType.Delete) {
        Op = other.Op;
      }
      if (other.RowPk.Length != 0) {
        RowPk = other.RowPk;
      }
      if (other.Row.Length != 0) {
        Row = other.Row;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Op = (global::ClientApi.TableRowOperation.Types.OperationType) input.ReadEnum();
            break;
          }
          case 18: {
            RowPk = input.ReadBytes();
            break;
          }
          case 26: {
            Row = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TableRowOperation message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum OperationType {
        [pbr::OriginalName("DELETE")] Delete = 0,
        [pbr::OriginalName("INSERT")] Insert = 1,
      }

    }
    #endregion

  }

  public sealed partial class TransactionUpdate : pb::IMessage<TransactionUpdate> {
    private static readonly pb::MessageParser<TransactionUpdate> _parser = new pb::MessageParser<TransactionUpdate>(() => new TransactionUpdate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionUpdate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ClientApi.ClientApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionUpdate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionUpdate(TransactionUpdate other) : this() {
      event_ = other.event_ != null ? other.event_.Clone() : null;
      subscriptionUpdate_ = other.subscriptionUpdate_ != null ? other.subscriptionUpdate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionUpdate Clone() {
      return new TransactionUpdate(this);
    }

    /// <summary>Field number for the "event" field.</summary>
    public const int EventFieldNumber = 1;
    private global::ClientApi.Event event_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.Event Event {
      get { return event_; }
      set {
        event_ = value;
      }
    }

    /// <summary>Field number for the "subscriptionUpdate" field.</summary>
    public const int SubscriptionUpdateFieldNumber = 2;
    private global::ClientApi.SubscriptionUpdate subscriptionUpdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ClientApi.SubscriptionUpdate SubscriptionUpdate {
      get { return subscriptionUpdate_; }
      set {
        subscriptionUpdate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionUpdate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionUpdate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Event, other.Event)) return false;
      if (!object.Equals(SubscriptionUpdate, other.SubscriptionUpdate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (event_ != null) hash ^= Event.GetHashCode();
      if (subscriptionUpdate_ != null) hash ^= SubscriptionUpdate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (event_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Event);
      }
      if (subscriptionUpdate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscriptionUpdate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (event_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Event);
      }
      if (subscriptionUpdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionUpdate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionUpdate other) {
      if (other == null) {
        return;
      }
      if (other.event_ != null) {
        if (event_ == null) {
          Event = new global::ClientApi.Event();
        }
        Event.MergeFrom(other.Event);
      }
      if (other.subscriptionUpdate_ != null) {
        if (subscriptionUpdate_ == null) {
          SubscriptionUpdate = new global::ClientApi.SubscriptionUpdate();
        }
        SubscriptionUpdate.MergeFrom(other.SubscriptionUpdate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (event_ == null) {
              Event = new global::ClientApi.Event();
            }
            input.ReadMessage(Event);
            break;
          }
          case 18: {
            if (subscriptionUpdate_ == null) {
              SubscriptionUpdate = new global::ClientApi.SubscriptionUpdate();
            }
            input.ReadMessage(SubscriptionUpdate);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
